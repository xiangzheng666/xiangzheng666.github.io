

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>XiangZheng</title>
  <subtitle>The more you learn, the stronger you become.</subtitle>
  <updated>2025-05-23T15:33:53+08:00</updated>
  <author>
    <name>xiangzheng666</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh-CN"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 xiangzheng666 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>爬虫 浏览器</title>
    <link href="http://localhost:4000/posts/%E7%88%AC%E8%99%AB-%E6%B5%8F%E8%A7%88%E5%99%A8/" rel="alternate" type="text/html" title="爬虫 浏览器" />
    <published>2024-05-12T00:00:00+08:00</published>
  
    <updated>2024-05-12T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/%E7%88%AC%E8%99%AB-%E6%B5%8F%E8%A7%88%E5%99%A8/</id>
    <content type="text/html" src="http://localhost:4000/posts/%E7%88%AC%E8%99%AB-%E6%B5%8F%E8%A7%88%E5%99%A8/" />
    <author>
      <name>xiangzheng666</name>
    </author>

  
    
    <category term="爬虫" />
    
  

  <summary>浏览器控制 1.Selenium pip install selenium  #浏览器版本： chrome://version/  #chromedrive下载 https://registry.npmmirror.com/binary.html?path=chromedriver/ https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json  {       &amp;quot;version&amp;quot;: &amp;quot;131.0.6778.87&amp;quot;,       &amp;quot;revision&amp;quot;: &amp;quot;1368529&amp;quot;,       &amp;quot;downloads&amp;quot;: {         &amp;quot;chromedriver&amp;quot;: [           {             &amp;quot;platform&amp;quot;: &amp;quot;linux64&amp;quot;, ...</summary>

  </entry>

  
  <entry>
    <title>爬虫 M3u8</title>
    <link href="http://localhost:4000/posts/%E7%88%AC%E8%99%AB-m3u8/" rel="alternate" type="text/html" title="爬虫 M3u8" />
    <published>2024-05-11T00:00:00+08:00</published>
  
    <updated>2024-05-11T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/%E7%88%AC%E8%99%AB-m3u8/</id>
    <content type="text/html" src="http://localhost:4000/posts/%E7%88%AC%E8%99%AB-m3u8/" />
    <author>
      <name>xiangzheng666</name>
    </author>

  
    
    <category term="爬虫" />
    
  

  <summary>HLS HLS技术的特点是将流媒体切分为若干【TS片段】（比如几秒一段），然后通过一个【M3U8列表文件】将这些TS片段批量下载供客户端播放器实现实时流式播放.  M3U文件 #EXTM3U:每个M3U文件第一行必须是这个tag标识。(简单了解) #EXT-X-VERSION:版本，此属性可用可不用。(简单了解) #EXT-X-TARGETDURATION:目标持续时间，是用来定义每个TS的【最大】duration（持续时间）。(简单了解) #EXT-X-ALLOW-CACHE是否允许允许高速缓存。(简单了解) #EXT-X-MEDIA-SEQUENCE定义当前M3U8文件中第一个文件的序列号，每个ts文件在M3U8文件中都有固定唯一的序列号。(简单了解) #EXT-X-DISCONTINUITY:播放器重新初始化(简单了解) #EXT-X-KEY定义加密方式，用来加密的密钥文件ke...</summary>

  </entry>

  
  <entry>
    <title>逆向 抓包</title>
    <link href="http://localhost:4000/posts/%E9%80%86%E5%90%91-%E6%8A%93%E5%8C%85/" rel="alternate" type="text/html" title="逆向 抓包" />
    <published>2024-05-08T00:00:00+08:00</published>
  
    <updated>2024-05-08T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/%E9%80%86%E5%90%91-%E6%8A%93%E5%8C%85/</id>
    <content type="text/html" src="http://localhost:4000/posts/%E9%80%86%E5%90%91-%E6%8A%93%E5%8C%85/" />
    <author>
      <name>xiangzheng666</name>
    </author>

  
    
    <category term="逆向" />
    
  

  <summary>Flutter对抗    Dart语言标准库的网络请求不走Wi-Fi代{过}{滤}理：Flutter使用的是Dart语言，其标准库中的网络请求不会通过代{过}{滤}理发送，这与许多其他应用不同。常规的抓包工具通常依赖于代{过}{滤}理来捕获网络流量，因此无法捕获Flutter应用的网络请求。   Dart SDK中的证书信任：Dart SDK在Android平台上强制只信任系统目录下的证书。这意味着Flutter应用不会信任用户安装的证书，除非这些证书位于Android系统的&amp;amp;lt;font style=&amp;quot;color:rgb(68, 68, 68);&amp;quot;&amp;amp;gt;/system/etc/security/cacerts&amp;amp;lt;/font&amp;amp;gt;目录中。这是通过Dart源码中的&amp;amp;lt;font style=&amp;quot;color:rgb(68, 68, 68);&amp;quot;&amp;amp;gt;runtime/bin/se...</summary>

  </entry>

  
  <entry>
    <title>逆向 签名校验</title>
    <link href="http://localhost:4000/posts/%E9%80%86%E5%90%91-%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C/" rel="alternate" type="text/html" title="逆向 签名校验" />
    <published>2024-04-28T00:00:00+08:00</published>
  
    <updated>2024-04-28T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/%E9%80%86%E5%90%91-%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C/</id>
    <content type="text/html" src="http://localhost:4000/posts/%E9%80%86%E5%90%91-%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C/" />
    <author>
      <name>xiangzheng666</name>
    </author>

  
    
    <category term="逆向" />
    
  

  <summary>签名 没有被签名的 Apk，则会被拒绝安装  Android 目前支持以下四种应用签名方案：    v1 方案：基于 JAR 签名。    v2 方案：APK 签名方案 v2（在 Android 7.0 中引入）    v3 方案：APK 签名方案 v3（在 Android 9 中引入）    v4 方案：APK 签名方案 v4（在 Android 11 中引入）  V1 签名的机制三个文件，MANIFEST.MF，ANDROID.SF，ANDROID.RSA.    （1）MANIFEST.MF：这是摘要文件。程序遍历Apk包中的所有文件(entry)，对非文件夹非签名文件的文件，逐个用SHA1(安全哈希算法)生成摘要信息，再用Base64进行编码。如果你改变了apk包中的文件，那么在apk安装校验时，改变后的文件摘要信息与MANIFEST.MF的检验信息不同，于是程序就不能成功安...</summary>

  </entry>

  
  <entry>
    <title>逆向 Frida持久化</title>
    <link href="http://localhost:4000/posts/%E9%80%86%E5%90%91-frida%E6%8C%81%E4%B9%85%E5%8C%96/" rel="alternate" type="text/html" title="逆向 Frida持久化" />
    <published>2024-04-22T00:00:00+08:00</published>
  
    <updated>2024-04-22T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/%E9%80%86%E5%90%91-frida%E6%8C%81%E4%B9%85%E5%8C%96/</id>
    <content type="text/html" src="http://localhost:4000/posts/%E9%80%86%E5%90%91-frida%E6%8C%81%E4%B9%85%E5%8C%96/" />
    <author>
      <name>xiangzheng666</name>
    </author>

  
    
    <category term="逆向" />
    
  

  <summary>1.免root方案 Frida的Gadget是一个共享库，用于免root注入hook脚本。    官方文档   思路:将APK解包后，通过修改smali代码或patch so文件的方式植入frida-gadget，然后重新打包安装。   优点:免ROOT、能过掉一部分检测机制   缺点:重打包可能会遇到解决不了的签名校验、hook时机需要把握          基于obejction的patchapk功能        &amp;amp;lt;/font&amp;amp;gt;官方文档   命令：  objection patchapk -V 14.2.18 -c config.txt -s demo.apk(注意路径不要有中文) -V 指定gadget版本 -c 加载脚本配置信息 -s 要注入的apk   注意的问题:    &amp;amp;lt;font style=&amp;quot;color:rgb(68, 68, 68);&amp;quot;&amp;amp;gt;o...</summary>

  </entry>

</feed>


